@startuml
class ASMAnalyzer.Analyzer {
    - parser : ASMAnalyzer.Parser
    - annotator : ASMAnalyzer.Annotator
    + analyzeFile(String path) : java.lang.String
    + getNotes() : java.lang.String
    - analyzeClassNode(ClassNode classNode) : java.lang.String
}
ASMAnalyzer.Analyzer --> ASMAnalyzer.Parser
ASMAnalyzer.Analyzer --> ASMAnalyzer.Annotator
class ASMAnalyzer.Annotator {
    - packageMap : java.util.Map
    + annotate(ClassNode classNode) : java.lang.String
    + getPackageName(String className) : java.lang.String
    + getNotes() : java.lang.String
}
class ASMAnalyzer.Formatter {
    - analyzer : ASMAnalyzer.Analyzer
    + analyzeProject(ArrayList list) : java.lang.String
}
ASMAnalyzer.Formatter --> ASMAnalyzer.Analyzer
class ASMAnalyzer.PackageCounter {
    - decoratorCount : int
    - singletonCount : int
    + incrementSingletonCount() : void
    + incrementDecoratorCount() : void
    + getDecoratorCount() : int
    + getSingletonCount() : int
}
class ASMAnalyzer.Parser {
    + parseFile(String path) : org.objectweb.asm.ClassReader
}
class ASMAnalyzer.Report {
    + generateReport(String umlCode) : void
}
class ASMAnalyzer.Runner {
    + main(String[] args) : void
    - findClassFiles(String directoryPath) : java.util.ArrayList
}
ASMAnalyzer.Runner --> ASMAnalyzer.Formatter
ASMAnalyzer.Runner --> ASMAnalyzer.Report
exampleSingletonDemo.SingletonExample -[#red]> exampleSingletonDemo.SingletonExample
class exampleSingletonDemo.SingletonExample <<Singleton>> #red {
    + getInstance() : exampleSingletonDemo.SingletonExample
}
exampleSingletonDemo.SingletonExample2 -[#red]> exampleSingletonDemo.SingletonExample2
class exampleSingletonDemo.SingletonExample2 <<Singleton>> #red {
    + getInstance() : exampleSingletonDemo.SingletonExample2
}
exampleSingletonDemo.SingletonExample3 -[#red]> exampleSingletonDemo.SingletonExample3
class exampleSingletonDemo.SingletonExample3 <<Singleton>> #red {
    + getInstance() : exampleSingletonDemo.SingletonExample3
}
exampleSingletonDemo.SingletonExample4 -[#red]> exampleSingletonDemo.SingletonExample4
class exampleSingletonDemo.SingletonExample4 <<Singleton>> #red {
    + getInstance() : exampleSingletonDemo.SingletonExample4
}
class lab2.DecryptionInputStream {
    - decryptor : lab2.IDecryption
    + read() : int
    + read(byte[] b, int off, int len) : int
}
lab2.DecryptionInputStream --> lab2.IDecryption
class lab2.EncryptionOutputStream {
    - encryptor : lab2.IEncryption
    + write(int b) : void
}
lab2.EncryptionOutputStream --> lab2.IEncryption
class lab2.IDecryption {
    - decrypt(char cipher) : char
}
class lab2.IEncryption {
    - encrypt(char plain) : char
}
class lab2.SubstitutionCipher {
    - encryptionKey : char[]
    - decryptionKey : char[]
    + encrypt(char plain) : char
    + decrypt(char cipher) : char
}
lab2.SubstitutionCipher ..|> lab2.IEncryption: implements
lab2.SubstitutionCipher ..|> lab2.IDecryption: implements
class lab2.TextEditorApp {
    + main(String[] args) : void
}
lab2.TextEditorApp --> lab2.SubstitutionCipher
pizzaDecoratorDemo.CheeseDecorator-[#90D5FF]>pizzaDecoratorDemo.PizzaDecorator
class pizzaDecoratorDemo.CheeseDecorator #90D5FF {
    + getDescription() : java.lang.String
    + cost() : double
}
pizzaDecoratorDemo.PepperoniDecorator-[#90D5FF]>pizzaDecoratorDemo.PizzaDecorator
class pizzaDecoratorDemo.PepperoniDecorator #90D5FF {
    + getDescription() : java.lang.String
    + cost() : double
}
class pizzaDecoratorDemo.Pizza {
    - getDescription() : java.lang.String
    - cost() : double
}
pizzaDecoratorDemo.PizzaDecorator-[#90D5FF]>pizzaDecoratorDemo.Pizza: decorates
class pizzaDecoratorDemo.PizzaDecorator #90D5FF {
    + decoratedPizza : pizzaDecoratorDemo.Pizza
    + getDescription() : java.lang.String
    + cost() : double
}
pizzaDecoratorDemo.PizzaDecorator ..|> pizzaDecoratorDemo.Pizza: implements
pizzaDecoratorDemo.PizzaDecorator --> pizzaDecoratorDemo.Pizza
class pizzaDecoratorDemo.PlainPizza {
    + getDescription() : java.lang.String
    + cost() : double
}
pizzaDecoratorDemo.PlainPizza ..|> pizzaDecoratorDemo.Pizza: implements
note top of ASMAnalyzer
    Decorator Count: 0
    Singleton Count: 0
end note 

note top of lab2
    Decorator Count: 0
    Singleton Count: 0
end note 

note top of exampleSingletonDemo
    Decorator Count: 0
    SINGLETON ABUSE
    Singleton Count: 4
end note 

note top of pizzaDecoratorDemo
    Decorator Count: 3
    Singleton Count: 0
end note 

@enduml
